basePath: /api/v1
definitions:
  models.APIResponse:
    properties:
      id:
        description: ID is the unique identifier of the request
        example: 05aebb0d-0169-4bde-bc6d-8662e4680108
        type: string
      method:
        description: Method is the text representation of the request (link.get)
        example: link.list
        type: string
      params:
        additionalProperties:
          type: string
        description: Params is the parameters of the request
        example:
          param: value
          param2: value2
        type: object
    type: object
  models.APIResponseError:
    properties:
      id:
        description: ID is the unique identifier of the request
        example: 05aebb0d-0169-4bde-bc6d-8662e4680108
        type: string
      method:
        description: Method is the text representation of the request (link.get)
        example: link.list
        type: string
      params:
        additionalProperties:
          type: string
        description: Params is the parameters of the request
        example:
          param: value
          param2: value2
        type: object
    type: object
  models.APIResponseError400:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: Bad Request
        type: string
    type: object
  models.APIResponseError404:
    properties:
      code:
        example: 404
        type: integer
      message:
        example: Not Found
        type: string
    type: object
  models.APIResponseError409:
    properties:
      code:
        example: 409
        type: integer
      message:
        example: Conflict
        type: string
    type: object
  models.APIResponseError500:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: Internal Server Error
        type: string
    type: object
  models.ColorName:
    enum:
    - gray
    - red
    - orange
    - yellow
    - green
    - blue
    - indigo
    - violet
    - gray
    - brown
    - pink
    - purple
    type: string
    x-enum-varnames:
    - ColorDefault
    - ColorRed
    - ColorOrange
    - ColorYellow
    - ColorGreen
    - ColorBlue
    - ColorIndigo
    - ColorViolet
    - ColorGray
    - ColorBrown
    - ColorPink
    - ColorPurple
  models.Label:
    properties:
      color:
        allOf:
        - $ref: '#/definitions/models.ColorName'
        default: gray
        description: |-
          Color is the color of the label
          If color is empty, set default color
        example: red
      id:
        description: ID is the unique identifier of the label
        example: f7c5c4a0-6a1f-4d4b-8a9f-5b5d6d9b8c4d
        type: string
      name:
        description: Name is the name of the label
        example: example
        type: string
    required:
    - name
    type: object
  models.LabelRequest:
    properties:
      color:
        allOf:
        - $ref: '#/definitions/models.ColorName'
        default: gray
        description: |-
          Color is the color of the label
          If color is empty, set default color
        example: red
      name:
        description: Name is the name of the label
        example: example
        type: string
    required:
    - name
    type: object
  models.Link:
    properties:
      createdAt:
        description: CreatedAt is the time the link was created - RFC3339
        example: "2021-07-04T15:04:05.999999999Z"
        type: string
      enabled:
        description: Enabled is the status of the link
        example: true
        type: boolean
      id:
        description: ID is the unique identifier of the link in the database
        example: 84214e93-437e-434d-96c2-22c3a63b3c67
        type: string
      labels:
        description: Labels is the list of labels associated with the link
        example:
        - a54abdd8-776c-4982-bba7-34caa58596c4
        - fcb0726f-9701-492c-afe7-aa7121afc9cf
        items:
          type: string
        type: array
      lastModified:
        description: UpdatedAt is the time the link was last modified - RFC3339
        example: "2021-07-04T15:04:05.999999999Z"
        type: string
      name:
        description: Name is the name of the link
        example: example
        type: string
      namespace:
        description: Namespace is the group the link belongs to
        example: prod
        type: string
      sourcePath:
        description: SourcePath is the path of the link
        example: /example
        type: string
      targetUrl:
        description: TargetURL is the original URL
        example: https://example.com
        type: string
    required:
    - enabled
    - name
    - sourcePath
    - targetUrl
    type: object
  models.LinkRequest:
    properties:
      enabled:
        description: Enabled is the status of the link
        example: true
        type: boolean
      labels:
        description: Labels is the list of labels associated with the link
        example:
        - a54abdd8-776c-4982-bba7-34caa58596c4
        - fcb0726f-9701-492c-afe7-aa7121afc9cf
        items:
          type: string
        type: array
      name:
        description: Name is the name of the link
        example: example
        type: string
      sourcePath:
        description: SourcePath is the path of the link
        example: /example
        type: string
      targetUrl:
        description: TargetURL is the original URL
        example: https://example.com
        type: string
    required:
    - enabled
    - name
    - sourcePath
    - targetUrl
    type: object
  models.Namespace:
    properties:
      enabled:
        description: Enabled is the status of the namespace
        type: boolean
      links:
        description: Links is the list of links associated with the namespace
        items:
          $ref: '#/definitions/models.Link'
        type: array
      name:
        description: Name is the name of the namespace
        type: string
    type: object
  models.NamespaceRequest:
    properties:
      name:
        description: Name is the name of the namespace
        type: string
    type: object
host: go
info:
  contact:
    url: http://github.com/azrod/golink
  description: This is a API for Golink Server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Golink API
  version: "1.0"
paths:
  /label:
    post:
      consumes:
      - application/json
      description: create label
      parameters:
      - description: Label
        in: body
        name: label
        required: true
        schema:
          $ref: '#/definitions/models.LabelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Label'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError409'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Create label
      tags:
      - labels
    put:
      consumes:
      - application/json
      description: update label
      parameters:
      - description: Label
        in: body
        name: label
        required: true
        schema:
          $ref: '#/definitions/models.Label'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Label'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Update label
      tags:
      - labels
  /label/{id}:
    delete:
      description: delete label
      parameters:
      - description: Label ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Delete label
      tags:
      - labels
    get:
      description: get label by ID
      parameters:
      - description: Label ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Label'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Get a label by ID
      tags:
      - labels
  /label/{name}:
    get:
      description: get label by name
      parameters:
      - description: Label name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Label'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Get a label by name
      tags:
      - labels
  /label/name/{name}:
    delete:
      description: delete label by name
      parameters:
      - description: Label name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Delete label by name
      tags:
      - labels
  /labels:
    get:
      description: List all labels available.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.APIResponse'
              - properties:
                  data:
                    items:
                      $ref: '#/definitions/models.Label'
                    type: array
                type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: List all labels
      tags:
      - labels
  /namespace:
    post:
      consumes:
      - application/json
      description: create Namespace
      parameters:
      - description: Namespace
        in: body
        name: Namespace
        required: true
        schema:
          $ref: '#/definitions/models.NamespaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Namespace'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError409'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Create Namespace
      tags:
      - namespaces
  /namespace/{name}:
    delete:
      description: delete Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Delete Namespace
      tags:
      - namespaces
    get:
      description: get Namespace by name
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Namespace'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Get a Namespace by name
      tags:
      - namespaces
  /namespace/{name}/link:
    post:
      consumes:
      - application/json
      description: add a Link to Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link
        in: body
        name: Link
        required: true
        schema:
          $ref: '#/definitions/models.LinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Link'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError409'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Add a Link to Namespace
      tags:
      - namespaces
  /namespace/{name}/link/{linkID}:
    delete:
      description: delete a Link from Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link ID
        in: path
        name: linkID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Delete a Link from Namespace
      tags:
      - namespaces
    get:
      description: get Link by name from Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link ID
        in: path
        name: linkID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Link'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Get a Link by name from Namespace
      tags:
      - namespaces
    put:
      consumes:
      - application/json
      description: update a Link in Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link ID
        in: path
        name: linkID
        required: true
        type: string
      - description: Link
        in: body
        name: Link
        required: true
        schema:
          $ref: '#/definitions/models.LinkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Link'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "409":
          description: Conflict
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError409'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Update a Link in Namespace
      tags:
      - namespaces
  /namespace/{name}/link/name/{linkname}:
    delete:
      description: delete a Link by name from Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link Name
        in: path
        name: linkname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Delete a Link by name from Namespace
      tags:
      - namespaces
    get:
      description: get Link by name from Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link Name
        in: path
        name: linkname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Link'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Get a Link by name from Namespace
      tags:
      - namespaces
  /namespace/{name}/link/path/{path}:
    get:
      description: get Link by path from Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      - description: Link Path
        in: path
        name: path
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Link'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: Get a Link by path from Namespace
      tags:
      - namespaces
  /namespace/{name}/links:
    get:
      description: get all Links by Namespace
      parameters:
      - description: Namespace
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.APIResponse'
              - properties:
                  data:
                    items:
                      $ref: '#/definitions/models.Link'
                    type: array
                type: object
            type: array
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: List all Links by Namespace
      tags:
      - namespaces
  /namespaces:
    get:
      description: get all Namespaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.APIResponse'
              - properties:
                  data:
                    items:
                      $ref: '#/definitions/models.Namespace'
                    type: array
                type: object
            type: array
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: List all Namespaces
      tags:
      - namespaces
  /namespaces/links:
    get:
      description: get all Links from all Namespaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              allOf:
              - $ref: '#/definitions/models.APIResponse'
              - properties:
                  data:
                    items:
                      $ref: '#/definitions/models.Link'
                    type: array
                type: object
            type: array
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError400'
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError404'
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: List all Links from all Namespaces
      tags:
      - namespaces
  /version:
    get:
      description: get the version of the application
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponseError'
            - properties:
                error:
                  $ref: '#/definitions/models.APIResponseError500'
              type: object
      summary: get the version of the application
      tags:
      - system
swagger: "2.0"
