/*
Copyright Â© 2023 NAME HERE <EMAIL ADDRESS>
*/
package cmd

import (
	"log"

	"github.com/go-resty/resty/v2"
	"github.com/spf13/cobra"

	"github.com/azrod/golink/models"
)

// addCmd represents the add command.
var (
	addCmdFlagDisable bool
	addCmd            = &cobra.Command{
		Use:   "add [NAME] [PATH] [TARGET URL]",
		Short: "Add a link",
		Long:  `Add a link to the database.`,
		// GroupID: "link",
		Args: func(cmd *cobra.Command, args []string) error {
			// Optionally run one of the validators provided by cobra
			if err := cobra.MinimumNArgs(3)(cmd, args); err != nil {
				return err
			}

			// TODO Check if the path is valid (starts with /) and does not already exist

			return nil
		},
		Run: func(cmd *cobra.Command, args []string) {
			v := &models.Link{
				Name:       args[0],
				SourcePath: args[1],
				TargetURL:  args[2],
				Enabled:    models.Enabled(!addCmdFlagDisable),
				// TODO add labels and group
			}

			r, err := resty.New().
				SetBaseURL(apiURL).
				R().
				SetDebug(globalFlagDebug).
				SetResult(&models.Link{}).
				SetBody(v).
				Post("/api/v1/link")
			if err != nil {
				log.Default().Printf("Failed to add link: %s", err)
				return
			}

			if r.IsError() {
				log.Default().Printf("Failed to add link: %s", r.Error())
				return
			}

			log.Default().Printf("Successfully added link %s !", args[0])
		},
	}
)

func init() {
	linkCmd.AddCommand(addCmd)

	// Here you will define your flags and configuration settings.

	// Cobra supports Persistent Flags which will work for this command
	// and all subcommands, e.g.:
	// addCmd.PersistentFlags().String("foo", "", "A help for foo")

	// Cobra supports local flags which will only run when this command
	// is called directly, e.g.:
	addCmd.Flags().BoolVar(&addCmdFlagDisable, "disable", false, "Disable the link after creation")
}
